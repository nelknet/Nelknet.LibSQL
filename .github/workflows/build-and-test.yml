name: Build and Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
    
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Build
      run: dotnet build --configuration Release --no-restore
    
    - name: Test
      run: dotnet test --configuration Release --no-build --verbosity normal --logger "console;verbosity=detailed"
      
    - name: Pack NuGet packages (without publishing)
      if: matrix.os == 'ubuntu-latest'
      run: |
        dotnet pack src/Nelknet.LibSQL.Bindings/Nelknet.LibSQL.Bindings.csproj -c Release --no-build -o ./artifacts
        dotnet pack src/Nelknet.LibSQL.Data/Nelknet.LibSQL.Data.csproj -c Release --no-build -o ./artifacts
        dotnet pack src/Nelknet.LibSQL.Data/Nelknet.LibSQL.Data.csproj -c Release --no-build -p:BuildType=Full -o ./artifacts
        
    - name: Upload artifacts
      if: matrix.os == 'ubuntu-latest'
      uses: actions/upload-artifact@v4
      with:
        name: nuget-packages
        path: ./artifacts/*.nupkg