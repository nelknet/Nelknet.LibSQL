name: Build Native Libraries (Simple)

on:
  workflow_dispatch:
    inputs:
      libsql_tag:
        description: 'libSQL repository tag to build (e.g. main, libsql-server-v0.24.32)'
        required: true
        default: 'main'

jobs:
  build-linux-x64:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Nelknet.LibSQL
        uses: actions/checkout@v4

      - name: Set libSQL tag
        run: |
          TAG=${{ github.event.inputs.libsql_tag || 'main' }}
          echo "LIBSQL_TAG=$TAG" >> $GITHUB_ENV

      - name: Checkout libSQL
        uses: actions/checkout@v4
        with:
          repository: tursodatabase/libsql
          ref: ${{ env.LIBSQL_TAG }}
          path: libsql

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Build libSQL
        working-directory: libsql/bindings/c
        run: cargo build --release

      - name: Create shared library
        run: |
          mkdir -p obj
          cd obj
          ar -x ../libsql/target/release/libsql_experimental.a
          gcc -shared -o libsql.so *.o -lpthread -ldl -lm

      - name: Prepare output
        run: |
          mkdir -p src/Nelknet.LibSQL.Bindings/runtimes/linux-x64/native
          cp obj/libsql.so src/Nelknet.LibSQL.Bindings/runtimes/linux-x64/native/
          cp libsql/bindings/c/include/libsql.h src/Nelknet.LibSQL.Bindings/

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: libsql-linux-x64
          path: |
            src/Nelknet.LibSQL.Bindings/runtimes/linux-x64/native/libsql.so
            src/Nelknet.LibSQL.Bindings/libsql.h

  build-windows-x64:
    runs-on: windows-latest
    steps:
      - name: Checkout Nelknet.LibSQL
        uses: actions/checkout@v4

      - name: Set libSQL tag
        run: |
          $TAG = "${{ github.event.inputs.libsql_tag || 'main' }}"
          echo "LIBSQL_TAG=$TAG" >> $env:GITHUB_ENV

      - name: Checkout libSQL
        uses: actions/checkout@v4
        with:
          repository: tursodatabase/libsql
          ref: ${{ env.LIBSQL_TAG }}
          path: libsql

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Build libSQL
        working-directory: libsql/bindings/c
        run: cargo build --release

      - name: Create DLL
        shell: powershell
        run: |
          # Find the Visual Studio installation
          $vsWhere = "${env:ProgramFiles(x86)}\Microsoft Visual Studio\Installer\vswhere.exe"
          $vsPath = & $vsWhere -latest -property installationPath
          $vcvarsPath = Join-Path $vsPath "VC\Auxiliary\Build\vcvars64.bat"
          
          # Create a batch file to run vcvars64 and then our commands
          @"
          @echo off
          call "$vcvarsPath"
          mkdir obj
          cd obj
          lib /list ..\libsql\target\release\libsql_experimental.lib > objects.txt
          for /f %%i in (objects.txt) do lib /extract:%%i ..\libsql\target\release\libsql_experimental.lib
          link /dll /out:libsql.dll *.obj advapi32.lib bcrypt.lib kernel32.lib userenv.lib ws2_32.lib msvcrt.lib
          "@ | Out-File -FilePath build.bat -Encoding ASCII
          
          cmd /c build.bat

      - name: Prepare output
        run: |
          New-Item -ItemType Directory -Force -Path "src\Nelknet.LibSQL.Bindings\runtimes\win-x64\native"
          Copy-Item "obj\libsql.dll" "src\Nelknet.LibSQL.Bindings\runtimes\win-x64\native\"
          Copy-Item "libsql\bindings\c\include\libsql.h" "src\Nelknet.LibSQL.Bindings\"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: libsql-win-x64
          path: |
            src/Nelknet.LibSQL.Bindings/runtimes/win-x64/native/libsql.dll
            src/Nelknet.LibSQL.Bindings/libsql.h

  build-macos-arm64:
    runs-on: macos-latest
    steps:
      - name: Checkout Nelknet.LibSQL
        uses: actions/checkout@v4

      - name: Set libSQL tag
        run: |
          TAG=${{ github.event.inputs.libsql_tag || 'main' }}
          echo "LIBSQL_TAG=$TAG" >> $GITHUB_ENV

      - name: Checkout libSQL
        uses: actions/checkout@v4
        with:
          repository: tursodatabase/libsql
          ref: ${{ env.LIBSQL_TAG }}
          path: libsql

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Build libSQL
        working-directory: libsql/bindings/c
        run: cargo build --release

      - name: Create dynamic library
        run: |
          mkdir -p obj
          cd obj
          ar -x ../libsql/target/release/libsql_experimental.a
          clang -dynamiclib -o libsql.dylib *.o \
            -framework Security -framework CoreFoundation \
            -lSystem -lc -lm

      - name: Prepare output
        run: |
          mkdir -p src/Nelknet.LibSQL.Bindings/runtimes/osx-arm64/native
          cp obj/libsql.dylib src/Nelknet.LibSQL.Bindings/runtimes/osx-arm64/native/
          cp libsql/bindings/c/include/libsql.h src/Nelknet.LibSQL.Bindings/

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: libsql-osx-arm64
          path: |
            src/Nelknet.LibSQL.Bindings/runtimes/osx-arm64/native/libsql.dylib
            src/Nelknet.LibSQL.Bindings/libsql.h

  package:
    needs: [build-linux-x64, build-windows-x64, build-macos-arm64]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Organize native libraries
        run: |
          # Copy all artifacts to the correct location
          for dir in artifacts/libsql-*; do
            cp -r $dir/* .
          done
          
          # Create version file
          echo "${{ github.event.inputs.libsql_tag || 'main' }}" > src/Nelknet.LibSQL.Bindings/runtimes/LIBSQL_VERSION
          
          # List what we have
          echo "Native libraries built:"
          find src/Nelknet.LibSQL.Bindings/runtimes -name "libsql.*" -type f

      - name: Commit native libraries
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore: Add native libSQL libraries for Linux x64, Windows x64, and macOS ARM64"
          file_pattern: |
            src/Nelknet.LibSQL.Bindings/runtimes/**
            src/Nelknet.LibSQL.Bindings/libsql.h