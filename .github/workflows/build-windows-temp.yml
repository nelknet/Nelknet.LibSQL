name: Build Windows Native Library (Temp)

on:
  workflow_dispatch:
    inputs:
      libsql_tag:
        description: 'libSQL repository ref to build (e.g. main, v0.4.6)'
        required: true
        default: 'main'

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout Nelknet.LibSQL
        uses: actions/checkout@v4

      - name: Checkout libSQL
        uses: actions/checkout@v4
        with:
          repository: tursodatabase/libsql
          ref: ${{ github.event.inputs.libsql_tag }}
          path: libsql

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Build libSQL C bindings
        working-directory: libsql/bindings/c
        run: cargo build --release

      - name: Setup VS Dev Environment and Create DLL
        shell: cmd
        run: |
          REM Find Visual Studio installation
          for /f "usebackq tokens=*" %%i in (`"%ProgramFiles(x86)%\Microsoft Visual Studio\Installer\vswhere.exe" -latest -property installationPath`) do set VS_PATH=%%i
          
          REM Setup VS environment
          call "%VS_PATH%\VC\Auxiliary\Build\vcvars64.bat"
          
          REM Create output directory
          if not exist "runtimes\win-x64\native" mkdir "runtimes\win-x64\native"
          
          REM Extract objects and create DLL
          cd libsql\target\release
          lib /list libsql_experimental.lib > objects.txt
          for /f %%i in (objects.txt) do lib /extract:%%i libsql_experimental.lib
          link /dll /out:libsql.dll *.obj advapi32.lib bcrypt.lib kernel32.lib userenv.lib ws2_32.lib msvcrt.lib
          
          REM Copy to output
          copy libsql.dll ..\..\..\runtimes\win-x64\native\

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: libsql-win-x64
          path: runtimes/win-x64/native/libsql.dll
          
      - name: Test DLL exists
        shell: pwsh
        run: |
          if (Test-Path "runtimes\win-x64\native\libsql.dll") {
            Write-Host "✅ DLL created successfully!"
            Get-Item "runtimes\win-x64\native\libsql.dll" | Format-List
          } else {
            Write-Host "❌ DLL not found!"
            exit 1
          }