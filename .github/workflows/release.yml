name: Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 1.0.0)'
        required: true
        type: string

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_NOLOGO: true
  NuGetDirectory: ${{ github.workspace}}/nuget

jobs:
  create_release:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.gitversion.outputs.SemVer }}
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Determine version
      id: gitversion
      run: |
        if [ -n "${{ github.event.inputs.version }}" ]; then
          echo "SemVer=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
        else
          # Extract version from tag
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "SemVer=$VERSION" >> $GITHUB_OUTPUT
        fi

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release /p:Version=${{ steps.gitversion.outputs.SemVer }}

    - name: Test
      run: dotnet test --configuration Release --no-build --verbosity normal

    - name: Pack NuGet packages
      run: |
        dotnet pack src/Nelknet.LibSQL.Bindings --configuration Release --output ${{ env.NuGetDirectory }} /p:Version=${{ steps.gitversion.outputs.SemVer }}
        dotnet pack src/Nelknet.LibSQL.Data --configuration Release --output ${{ env.NuGetDirectory }} /p:Version=${{ steps.gitversion.outputs.SemVer }}

    - name: Upload NuGet packages
      uses: actions/upload-artifact@v4
      with:
        name: nuget
        path: ${{ env.NuGetDirectory }}
        retention-days: 7

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.gitversion.outputs.SemVer }}
        release_name: Release v${{ steps.gitversion.outputs.SemVer }}
        body: |
          See [CHANGELOG.md](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md) for details.
          
          ## Installation
          ```bash
          dotnet add package Nelknet.LibSQL.Data --version ${{ steps.gitversion.outputs.SemVer }}
          ```
        draft: true
        prerelease: ${{ contains(steps.gitversion.outputs.SemVer, '-') }}

  publish_nuget:
    needs: create_release
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/download-artifact@v4
      with:
        name: nuget
        path: ${{ env.NuGetDirectory }}

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    # Publish to NuGet.org
    - name: Publish to NuGet.org
      if: ${{ secrets.NUGET_API_KEY != '' }}
      run: |
        dotnet nuget push "${{ env.NuGetDirectory }}/*.nupkg" \
          --api-key ${{ secrets.NUGET_API_KEY }} \
          --source https://api.nuget.org/v3/index.json \
          --skip-duplicate

    # Always publish to GitHub Packages as backup
    - name: Publish to GitHub Packages
      run: |
        dotnet nuget push "${{ env.NuGetDirectory }}/*.nupkg" \
          --api-key ${{ secrets.GITHUB_TOKEN }} \
          --source https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json \
          --skip-duplicate